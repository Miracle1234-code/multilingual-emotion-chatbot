# -*- coding: utf-8 -*-
"""multilingual_emotion_chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l4mDjuDzR9V12fxBv9H9d270g0AElQB3
"""



!pip install langdetect
!pip install transformers deep-translator

from transformers import pipeline
from deep_translator import GoogleTranslator
from langdetect import detect
import re

# Load emotion detection model
emotion_detector = pipeline("text-classification", model="j-hartmann/emotion-english-distilroberta-base")

# Emotion replies
replies = {
    "joy": "That's wonderful to hear! 😊 What made you happy?",
    "sadness": "I'm really sorry you're feeling sad. Want to talk about it?",
    "anger": "It's okay to feel angry sometimes. Do you want to share what happened?",
    "fear": "That sounds scary. I'm here to talk if you need to.",
    "disgust": "Hmm, that doesn’t sound nice. Want to tell me more?",
    "surprise": "Whoa! That's surprising. What happened exactly?",
    "love": "Awww, love is such a beautiful thing. Tell me more ❤️",
    "neutral": "I'm here for you. How are you feeling?"
}

# ✅ Improved detection of local African languages using full words only
def detect_language(text):
    try:
        igbo_keywords = ["obi", "ụ", "anyị", "ụtụtụ", "na-eme", "ụtụtụ ọma"]
        yoruba_keywords = ["mo", "ni", "emi", "binu", "inú", "dun", "inu", "mi", "o", "o dun"]
        hausa_keywords = ["ina", "zafi", "da", "sannu", "ji", "kaji", "ban"]

        text_lower = text.lower()
        words = re.findall(r'\b\w+\b', text_lower)  # extract clean word tokens

        if any(word in words for word in igbo_keywords):
            return "ig"  # Igbo
        elif any(word in words for word in yoruba_keywords):
            return "yo"  # Yoruba
        elif any(word in words for word in hausa_keywords):
            return "ha"  # Hausa
        else:
            return detect(text)  # fallback to langdetect
    except:
        return 'en'

# 🧠 Main chatbot logic
def multilingual_chatbot(user_input):
    try:
        # 1. Detect language
        lang = detect_language(user_input)
        print(f"Detected language: {lang}")

        # 2. Fix Yoruba "inu mi o dun" case
        text_lower = user_input.lower()
        if "inu mi" in text_lower and "o dun" in text_lower:
            translated_text = "I am not happy"
        else:
            translated_text = GoogleTranslator(source='auto', target='en').translate(user_input)

        print(f"Translated to English: {translated_text}")

        # 3. Detect emotion
        result = emotion_detector(translated_text)
        if isinstance(result, list) and isinstance(result[0], dict):
            emotion = result[0].get("label", "neutral")
        elif isinstance(result, dict):
            emotion = result.get("label", "neutral")
        else:
            emotion = "neutral"

        print(f"Detected emotion: {emotion}")

        # 4. Generate reply and translate back
        english_reply = replies.get(emotion.lower(), replies["neutral"])
        final_reply = GoogleTranslator(source='en', target=lang).translate(english_reply)

        print(f"\n💬 Chatbot Response in your language:\n{final_reply}")

    except Exception as e:
        print(f"❌ Something went wrong: {e}")

# 🚀 Run the chatbot
if __name__ == "__main__":
    user_input = input("Type your message in English, Yoruba, Hausa, or Igbo: ")
    multilingual_chatbot(user_input)

# 🚀 Run the chatbot
if __name__ == "__main__":
    user_input = input("Type your message in English, Yoruba, Hausa, or Igbo: ")
    multilingual_chatbot(user_input)

# 🚀 Run the chatbot
if __name__ == "__main__":
    user_input = input("Type your message in English, Yoruba, Hausa, or Igbo: ")
    multilingual_chatbot(user_input)

# 🚀 Run the chatbot
if __name__ == "__main__":
    user_input = input("Type your message in English, Yoruba, Hausa, or Igbo: ")
    multilingual_chatbot(user_input)

# 🚀 Run the chatbot
if __name__ == "__main__":
    user_input = input("Type your message in English, Yoruba, Hausa, or Igbo: ")
    multilingual_chatbot(user_input)

# 🚀 Run the chatbot
if __name__ == "__main__":
    user_input = input("Type your message in English, Yoruba, Hausa, or Igbo: ")
    multilingual_chatbot(user_input)

